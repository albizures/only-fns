{
	"compilerOptions": {
		// transpile JSX to React.createElement
		"jsx": "react",
		"lib": ["dom", "esnext"],
		// match output dir to input dir. e.g. dist/index instead of dist/src/index
		"rootDir": "./src",
		"module": "CommonJS",
		// use Node's module resolution algorithm, instead of the legacy TS one
		"moduleResolution": "node",
		// stricter type-checking for stronger correctness. Recommended by TS
		"strict": true,
		"noFallthroughCasesInSwitch": true,
		// linter checks for common issues
		"noImplicitReturns": true,
		// noUnused* overlap with @typescript-eslint/no-unused-vars, can disable if duplicative
		"noUnusedLocals": true,
		"noUnusedParameters": true,
		// output .d.ts declaration files for consumers
		"declaration": true,
		"importHelpers": true,
		// `tsdx build` ignores this option, but it is commonly used when type-checking separately with `tsc`
		"noEmit": true,
		// output .js.map sourcemap files for consumers
		"sourceMap": true,

		"allowSyntheticDefaultImports": true,
		// interop between ESM and CJS modules. Recommended by TS
		"esModuleInterop": true,
		// error out if import and file system have a casing mismatch. Recommended by TS
		"forceConsistentCasingInFileNames": true,
		// significant perf increase by skipping checking .d.ts files, particularly those in node_modules. Recommended by TS
		"skipLibCheck": true
	},
	// see https://www.typescriptlang.org/tsconfig to better understand tsconfigs
	"include": ["src", "types"]
}
